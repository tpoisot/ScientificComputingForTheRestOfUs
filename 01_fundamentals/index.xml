<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://sciencecomputing.io/01_fundamentals/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sciencecomputing.io/01_fundamentals/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Boolean values</title><link>https://sciencecomputing.io/fundamentals/introduction-to-boolean-values/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sciencecomputing.io/fundamentals/introduction-to-boolean-values/</guid><description>&lt;p>In this module, we will get acquainted with one of the most important type of
variables: Boolean values. They represent values that are either &lt;code>true&lt;/code> or
&lt;code>false&lt;/code>, which is a key element in a number of problems.&lt;/p></description></item><item><title>Short-circuit Boolean operations</title><link>https://sciencecomputing.io/fundamentals/short-circuit-boolean-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sciencecomputing.io/fundamentals/short-circuit-boolean-operations/</guid><description>&lt;p>In the &lt;a href="https://sciencecomputing.io/fundamentals/introduction-to-boolean-values/">previous module&lt;/a>, we have introduce important notions about
Boolean values. In this module, we will expand upon this knowledge in ways
that will enable us to be more expressive with the code we write.&lt;/p></description></item><item><title>The ternary operator</title><link>https://sciencecomputing.io/fundamentals/the-ternary-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sciencecomputing.io/fundamentals/the-ternary-operator/</guid><description>&lt;p>In this module, we will look at the &amp;ldquo;ternary operator&amp;rdquo;, a very efficient
shortcut to perform a logical test in a single line. This is a construct we
will use quite a lot to express both possible outcomes of a conditional expression using
a single line!&lt;/p></description></item><item><title>Types</title><link>https://sciencecomputing.io/fundamentals/types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sciencecomputing.io/fundamentals/types/</guid><description>&lt;p>In this module, we will look at one of the most important concept in &lt;em>Julia&lt;/em>:
types. Types are, to be really imprecise, the way a programming language
thinks about a value. A lot of problems arise from the fact that programming
languages are very opinionated.&lt;/p></description></item></channel></rss>